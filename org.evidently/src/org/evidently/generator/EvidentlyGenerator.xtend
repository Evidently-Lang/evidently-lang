/*
 * generated by Xtext 2.12.0
 */
package org.evidently.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext


import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.eclipse.xtext.naming.IQualifiedNameProvider
 
import com.google.inject.Inject
import org.evidently.evidently.Policy

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class EvidentlyGenerator extends AbstractGenerator {

	@Inject extension IQualifiedNameProvider

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {

		 for (e : resource.allContents.toIterable.filter(Policy)) {
	        fsa.generateFile(
	            e.fullyQualifiedName.toString("/") + ".java",
	            e.compile)
	    }

	}
	
	def compile(Policy e) '''
    package <<e.eContainer.fullyQualifiedName>>;
        
    public class <<e.name>> {

    }
	'''
}
